/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        lbracket_combo {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <9 8>;
            layers = <0>;
        };

        rcmd_combo {
            bindings = <&kp RIGHT_COMMAND>;
            key-positions = <21 22>;
            layers = <0>;
        };

        rctrl_combo {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <21 20>;
            layers = <0>;
        };

        rshift_combo {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <19 20>;
            layers = <0>;
        };

        ralt_combo {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <18 19>;
            layers = <0>;
        };

        rbracket_combo {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 10>;
            layers = <0>;
        };

        lparent_combo {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
            layers = <0>;
        };

        rparent_combo {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
            layers = <0>;
        };

        lcmd_combo {
            bindings = <&kp LEFT_COMMAND>;
            key-positions = <13 14>;
            layers = <0>;
        };

        lctrl_combo {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <14 15>;
            layers = <0>;
        };

        lshift_combo {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <15 16>;
            layers = <0>;
        };

        lalt_combo {
            bindings = <&kp LEFT_ALT>;
            key-positions = <16 17>;
            layers = <0>;
        };

        lctrl_alt_combo {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <16 14 15>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // | NONE |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | NONE |
            // | NONE |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | NONE |
            // | NONE |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | NONE |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E                &kp R            &kp T           &kp Y      &kp U        &kp I        &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D                &kp F            &kp G           &kp H      &kp J        &kp K        &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C                &kp V            &kp B           &kp N      &kp M        &kp COMMA    &kp DOT  &kp FSLH  &none
                     &mt LEFT_SHIFT CAPS  &lt 3 BACKSPACE  &lt 5 ESCAPE    &lt 2 TAB  &lt 1 SPACE  &lt 4 ENTER
            >;

            label = "base";
        };

        num {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &none   &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans    &trans    &trans
                        &trans  &trans  &trans    &trans  &trans     &trans
            >;

            label = "num";
        };

        sym {
            bindings = <
&trans  &kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN   &kp POUND             &kp DOLLAR               &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp CARET  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &kp LSHFT  &kp LCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp MINUS  &kp EQUAL        &kp SQT       &kp PLUS              &kp BACKSLASH            &trans  &trans     &trans     &trans    &trans    &trans
                                    &trans        &trans                &trans                   &trans  &trans     &trans
            >;

            label = "sym";
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "media";
        };

        func {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                          &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "func";
        };

        nav {
            bindings = <
&trans  &trans    &trans     &trans    &trans     &trans    &trans    &trans    &trans  &trans     &trans  &trans
&trans  &kp LGUI  &kp LCTRL  &kp LALT  &kp LSHFT  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans    &trans     &trans    &trans     &trans    &trans    &trans    &trans  &trans     &trans  &trans
                             &trans    &trans     &trans    &trans    &trans    &trans
            >;

            label = "nav";
        };
    };
};
